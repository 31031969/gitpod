// Copyright (c) 2023 Gitpod GmbH. All rights reserved.
// Licensed under the GNU Affero General Public License (AGPL).
// See License.AGPL.txt in the project root for license information.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: gitpod/v1/error.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ErrorInfo_Reason int32

const (
	ErrorInfo_REASON_UNSPECIFIED                               ErrorInfo_Reason = 0
	ErrorInfo_REASON_USER_BLOCKED                              ErrorInfo_Reason = 1
	ErrorInfo_REASON_NEEDS_VERIFICATION                        ErrorInfo_Reason = 2
	ErrorInfo_REASON_PAYMENT_SPENDING_LIMIT_REACHEAD           ErrorInfo_Reason = 3
	ErrorInfo_REASON_INVITES_DISABLED_SSO_ORGANIZATION         ErrorInfo_Reason = 4
	ErrorInfo_REASON_LAST_ORGANIZATION_OWNER_CANNOT_BE_REMOVED ErrorInfo_Reason = 5
	ErrorInfo_REASON_MEMBER_BELONGS_TO_ORGANIZATION            ErrorInfo_Reason = 6 // define other reasons
)

// Enum value maps for ErrorInfo_Reason.
var (
	ErrorInfo_Reason_name = map[int32]string{
		0: "REASON_UNSPECIFIED",
		1: "REASON_USER_BLOCKED",
		2: "REASON_NEEDS_VERIFICATION",
		3: "REASON_PAYMENT_SPENDING_LIMIT_REACHEAD",
		4: "REASON_INVITES_DISABLED_SSO_ORGANIZATION",
		5: "REASON_LAST_ORGANIZATION_OWNER_CANNOT_BE_REMOVED",
		6: "REASON_MEMBER_BELONGS_TO_ORGANIZATION",
	}
	ErrorInfo_Reason_value = map[string]int32{
		"REASON_UNSPECIFIED":                               0,
		"REASON_USER_BLOCKED":                              1,
		"REASON_NEEDS_VERIFICATION":                        2,
		"REASON_PAYMENT_SPENDING_LIMIT_REACHEAD":           3,
		"REASON_INVITES_DISABLED_SSO_ORGANIZATION":         4,
		"REASON_LAST_ORGANIZATION_OWNER_CANNOT_BE_REMOVED": 5,
		"REASON_MEMBER_BELONGS_TO_ORGANIZATION":            6,
	}
)

func (x ErrorInfo_Reason) Enum() *ErrorInfo_Reason {
	p := new(ErrorInfo_Reason)
	*p = x
	return p
}

func (x ErrorInfo_Reason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorInfo_Reason) Descriptor() protoreflect.EnumDescriptor {
	return file_gitpod_v1_error_proto_enumTypes[0].Descriptor()
}

func (ErrorInfo_Reason) Type() protoreflect.EnumType {
	return &file_gitpod_v1_error_proto_enumTypes[0]
}

func (x ErrorInfo_Reason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorInfo_Reason.Descriptor instead.
func (ErrorInfo_Reason) EnumDescriptor() ([]byte, []int) {
	return file_gitpod_v1_error_proto_rawDescGZIP(), []int{0, 0}
}

type ResourceInfo_Type int32

const (
	ResourceInfo_TYPE_UNSPECIFIED         ResourceInfo_Type = 0
	ResourceInfo_TYPE_USER                ResourceInfo_Type = 1
	ResourceInfo_TYPE_ORGANIZATION        ResourceInfo_Type = 2
	ResourceInfo_TYPE_CONFIGURATION       ResourceInfo_Type = 3
	ResourceInfo_TYPE_WORKSPACE           ResourceInfo_Type = 4
	ResourceInfo_TYPE_ORGANIZATION_INVITE ResourceInfo_Type = 5
	ResourceInfo_TYPE_ORGANIZATION_MEMBER ResourceInfo_Type = 6 // define other resources
)

// Enum value maps for ResourceInfo_Type.
var (
	ResourceInfo_Type_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "TYPE_USER",
		2: "TYPE_ORGANIZATION",
		3: "TYPE_CONFIGURATION",
		4: "TYPE_WORKSPACE",
		5: "TYPE_ORGANIZATION_INVITE",
		6: "TYPE_ORGANIZATION_MEMBER",
	}
	ResourceInfo_Type_value = map[string]int32{
		"TYPE_UNSPECIFIED":         0,
		"TYPE_USER":                1,
		"TYPE_ORGANIZATION":        2,
		"TYPE_CONFIGURATION":       3,
		"TYPE_WORKSPACE":           4,
		"TYPE_ORGANIZATION_INVITE": 5,
		"TYPE_ORGANIZATION_MEMBER": 6,
	}
)

func (x ResourceInfo_Type) Enum() *ResourceInfo_Type {
	p := new(ResourceInfo_Type)
	*p = x
	return p
}

func (x ResourceInfo_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResourceInfo_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_gitpod_v1_error_proto_enumTypes[1].Descriptor()
}

func (ResourceInfo_Type) Type() protoreflect.EnumType {
	return &file_gitpod_v1_error_proto_enumTypes[1]
}

func (x ResourceInfo_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResourceInfo_Type.Descriptor instead.
func (ResourceInfo_Type) EnumDescriptor() ([]byte, []int) {
	return file_gitpod_v1_error_proto_rawDescGZIP(), []int{1, 0}
}

type BadRequest_Reason int32

const (
	BadRequest_REASON_UNSPECIFIED BadRequest_Reason = 0
	BadRequest_REASON_TOO_LONG    BadRequest_Reason = 1 // define other reasons
)

// Enum value maps for BadRequest_Reason.
var (
	BadRequest_Reason_name = map[int32]string{
		0: "REASON_UNSPECIFIED",
		1: "REASON_TOO_LONG",
	}
	BadRequest_Reason_value = map[string]int32{
		"REASON_UNSPECIFIED": 0,
		"REASON_TOO_LONG":    1,
	}
)

func (x BadRequest_Reason) Enum() *BadRequest_Reason {
	p := new(BadRequest_Reason)
	*p = x
	return p
}

func (x BadRequest_Reason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BadRequest_Reason) Descriptor() protoreflect.EnumDescriptor {
	return file_gitpod_v1_error_proto_enumTypes[2].Descriptor()
}

func (BadRequest_Reason) Type() protoreflect.EnumType {
	return &file_gitpod_v1_error_proto_enumTypes[2]
}

func (x BadRequest_Reason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BadRequest_Reason.Descriptor instead.
func (BadRequest_Reason) EnumDescriptor() ([]byte, []int) {
	return file_gitpod_v1_error_proto_rawDescGZIP(), []int{2, 0}
}

// Describes the cause of the error with structured details to further classify the error.
//
// Example of a PERMISSION_DENIED status when a user is blocked
//
//	{ "reason": "REASON_USER_BLOCKED" }
//
// Example of a PERMISSION_DENIED status when a user is not verified
//
//	{ "reason": "REASON_NEEDS_VERIFICATION" }
//
// Example of FAILED_PRECONDITION status when an org payment limit is reached
//
//	{ "reason": "REASON_PAYMENT_SPENDING_LIMIT_REACHEAD" }
type ErrorInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The reason of the error.
	Reason   ErrorInfo_Reason  `protobuf:"varint,1,opt,name=reason,proto3,enum=gitpod.v1.ErrorInfo_Reason" json:"reason,omitempty"`
	Metadata map[string]string `protobuf:"bytes,2,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ErrorInfo) Reset() {
	*x = ErrorInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitpod_v1_error_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorInfo) ProtoMessage() {}

func (x *ErrorInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_error_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorInfo.ProtoReflect.Descriptor instead.
func (*ErrorInfo) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_error_proto_rawDescGZIP(), []int{0}
}

func (x *ErrorInfo) GetReason() ErrorInfo_Reason {
	if x != nil {
		return x.Reason
	}
	return ErrorInfo_REASON_UNSPECIFIED
}

func (x *ErrorInfo) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Describes the resource that is being accessed.
//
// It should be used as a payload for NOT_FOUND and ALREDY_EXIST status codes.
type ResourceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the resource being accessed
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// the type of resource being accessed
	Type ResourceInfo_Type `protobuf:"varint,2,opt,name=type,proto3,enum=gitpod.v1.ResourceInfo_Type" json:"type,omitempty"`
	// The id of the parent resource of the resource being accessed
	// For example, the parent of a member is the organization.
	ParentId *string `protobuf:"bytes,3,opt,name=parent_id,json=parentId,proto3,oneof" json:"parent_id,omitempty"`
}

func (x *ResourceInfo) Reset() {
	*x = ResourceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitpod_v1_error_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceInfo) ProtoMessage() {}

func (x *ResourceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_error_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceInfo.ProtoReflect.Descriptor instead.
func (*ResourceInfo) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_error_proto_rawDescGZIP(), []int{1}
}

func (x *ResourceInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ResourceInfo) GetType() ResourceInfo_Type {
	if x != nil {
		return x.Type
	}
	return ResourceInfo_TYPE_UNSPECIFIED
}

func (x *ResourceInfo) GetParentId() string {
	if x != nil && x.ParentId != nil {
		return *x.ParentId
	}
	return ""
}

// Describes violations in a client request. This error type focuses on the
// syntactic aspects of the request.
//
// It should be used as a payload for INVALID_ARGUMENT and OUT_OF_RANGE status codes.
type BadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []*BadRequest_FieldViolation `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *BadRequest) Reset() {
	*x = BadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitpod_v1_error_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BadRequest) ProtoMessage() {}

func (x *BadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_error_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BadRequest.ProtoReflect.Descriptor instead.
func (*BadRequest) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_error_proto_rawDescGZIP(), []int{2}
}

func (x *BadRequest) GetFields() []*BadRequest_FieldViolation {
	if x != nil {
		return x.Fields
	}
	return nil
}

// Contains metadata about the request that clients can attach when filing a bug
// or providing other forms of feedback.
type RequestInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// An opaque string that should only be interpreted by the service generating
	// it. For example, it can be used to identify requests in the service's logs.
	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *RequestInfo) Reset() {
	*x = RequestInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitpod_v1_error_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestInfo) ProtoMessage() {}

func (x *RequestInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_error_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestInfo.ProtoReflect.Descriptor instead.
func (*RequestInfo) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_error_proto_rawDescGZIP(), []int{3}
}

func (x *RequestInfo) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

// A message type used to describe a single bad request field.
type BadRequest_FieldViolation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A path that leads to a field in the request body.
	FieldPath string `protobuf:"bytes,1,opt,name=field_path,json=fieldPath,proto3" json:"field_path,omitempty"`
	// message is a human readable description why the request element is bad.
	Message string            `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Reason  BadRequest_Reason `protobuf:"varint,3,opt,name=reason,proto3,enum=gitpod.v1.BadRequest_Reason" json:"reason,omitempty"`
}

func (x *BadRequest_FieldViolation) Reset() {
	*x = BadRequest_FieldViolation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitpod_v1_error_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BadRequest_FieldViolation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BadRequest_FieldViolation) ProtoMessage() {}

func (x *BadRequest_FieldViolation) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_error_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BadRequest_FieldViolation.ProtoReflect.Descriptor instead.
func (*BadRequest_FieldViolation) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_error_proto_rawDescGZIP(), []int{2, 0}
}

func (x *BadRequest_FieldViolation) GetFieldPath() string {
	if x != nil {
		return x.FieldPath
	}
	return ""
}

func (x *BadRequest_FieldViolation) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *BadRequest_FieldViolation) GetReason() BadRequest_Reason {
	if x != nil {
		return x.Reason
	}
	return BadRequest_REASON_UNSPECIFIED
}

var File_gitpod_v1_error_proto protoreflect.FileDescriptor

var file_gitpod_v1_error_proto_rawDesc = []byte{
	0x0a, 0x15, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e,
	0x76, 0x31, 0x22, 0xd3, 0x03, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x33, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1b, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x93, 0x02, 0x0a, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x16, 0x0a,
	0x12, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f,
	0x55, 0x53, 0x45, 0x52, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10, 0x01, 0x12, 0x1d,
	0x0a, 0x19, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x4e, 0x45, 0x45, 0x44, 0x53, 0x5f, 0x56,
	0x45, 0x52, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x2a, 0x0a,
	0x26, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f,
	0x53, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x5f, 0x52,
	0x45, 0x41, 0x43, 0x48, 0x45, 0x41, 0x44, 0x10, 0x03, 0x12, 0x2c, 0x0a, 0x28, 0x52, 0x45, 0x41,
	0x53, 0x4f, 0x4e, 0x5f, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x53, 0x5f, 0x44, 0x49, 0x53, 0x41,
	0x42, 0x4c, 0x45, 0x44, 0x5f, 0x53, 0x53, 0x4f, 0x5f, 0x4f, 0x52, 0x47, 0x41, 0x4e, 0x49, 0x5a,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x04, 0x12, 0x34, 0x0a, 0x30, 0x52, 0x45, 0x41, 0x53, 0x4f,
	0x4e, 0x5f, 0x4c, 0x41, 0x53, 0x54, 0x5f, 0x4f, 0x52, 0x47, 0x41, 0x4e, 0x49, 0x5a, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x4f, 0x57, 0x4e, 0x45, 0x52, 0x5f, 0x43, 0x41, 0x4e, 0x4e, 0x4f, 0x54,
	0x5f, 0x42, 0x45, 0x5f, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x44, 0x10, 0x05, 0x12, 0x29, 0x0a,
	0x25, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x42,
	0x45, 0x4c, 0x4f, 0x4e, 0x47, 0x53, 0x5f, 0x54, 0x4f, 0x5f, 0x4f, 0x52, 0x47, 0x41, 0x4e, 0x49,
	0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x06, 0x22, 0xad, 0x02, 0x0a, 0x0c, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x09, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x22, 0xaa, 0x01,
	0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x4f, 0x52, 0x47, 0x41, 0x4e, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49,
	0x47, 0x55, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x57, 0x4f, 0x52, 0x4b, 0x53, 0x50, 0x41, 0x43, 0x45, 0x10, 0x04, 0x12, 0x1c,
	0x0a, 0x18, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x52, 0x47, 0x41, 0x4e, 0x49, 0x5a, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x10, 0x05, 0x12, 0x1c, 0x0a, 0x18,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x52, 0x47, 0x41, 0x4e, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x10, 0x06, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x22, 0x82, 0x02, 0x0a, 0x0a, 0x42, 0x61, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x56, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x1a, 0x7f, 0x0a, 0x0e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x69,
	0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x50, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x34, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1c, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x35, 0x0a, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x12, 0x16, 0x0a, 0x12, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x45, 0x41, 0x53,
	0x4f, 0x4e, 0x5f, 0x54, 0x4f, 0x4f, 0x5f, 0x4c, 0x4f, 0x4e, 0x47, 0x10, 0x01, 0x22, 0x2c, 0x0a,
	0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x42, 0x39, 0x5a, 0x37, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64,
	0x2d, 0x69, 0x6f, 0x2f, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2d, 0x61, 0x70, 0x69,
	0x2f, 0x67, 0x6f, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gitpod_v1_error_proto_rawDescOnce sync.Once
	file_gitpod_v1_error_proto_rawDescData = file_gitpod_v1_error_proto_rawDesc
)

func file_gitpod_v1_error_proto_rawDescGZIP() []byte {
	file_gitpod_v1_error_proto_rawDescOnce.Do(func() {
		file_gitpod_v1_error_proto_rawDescData = protoimpl.X.CompressGZIP(file_gitpod_v1_error_proto_rawDescData)
	})
	return file_gitpod_v1_error_proto_rawDescData
}

var file_gitpod_v1_error_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_gitpod_v1_error_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_gitpod_v1_error_proto_goTypes = []interface{}{
	(ErrorInfo_Reason)(0),             // 0: gitpod.v1.ErrorInfo.Reason
	(ResourceInfo_Type)(0),            // 1: gitpod.v1.ResourceInfo.Type
	(BadRequest_Reason)(0),            // 2: gitpod.v1.BadRequest.Reason
	(*ErrorInfo)(nil),                 // 3: gitpod.v1.ErrorInfo
	(*ResourceInfo)(nil),              // 4: gitpod.v1.ResourceInfo
	(*BadRequest)(nil),                // 5: gitpod.v1.BadRequest
	(*RequestInfo)(nil),               // 6: gitpod.v1.RequestInfo
	nil,                               // 7: gitpod.v1.ErrorInfo.MetadataEntry
	(*BadRequest_FieldViolation)(nil), // 8: gitpod.v1.BadRequest.FieldViolation
}
var file_gitpod_v1_error_proto_depIdxs = []int32{
	0, // 0: gitpod.v1.ErrorInfo.reason:type_name -> gitpod.v1.ErrorInfo.Reason
	7, // 1: gitpod.v1.ErrorInfo.metadata:type_name -> gitpod.v1.ErrorInfo.MetadataEntry
	1, // 2: gitpod.v1.ResourceInfo.type:type_name -> gitpod.v1.ResourceInfo.Type
	8, // 3: gitpod.v1.BadRequest.fields:type_name -> gitpod.v1.BadRequest.FieldViolation
	2, // 4: gitpod.v1.BadRequest.FieldViolation.reason:type_name -> gitpod.v1.BadRequest.Reason
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_gitpod_v1_error_proto_init() }
func file_gitpod_v1_error_proto_init() {
	if File_gitpod_v1_error_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gitpod_v1_error_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitpod_v1_error_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitpod_v1_error_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitpod_v1_error_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitpod_v1_error_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BadRequest_FieldViolation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_gitpod_v1_error_proto_msgTypes[1].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gitpod_v1_error_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gitpod_v1_error_proto_goTypes,
		DependencyIndexes: file_gitpod_v1_error_proto_depIdxs,
		EnumInfos:         file_gitpod_v1_error_proto_enumTypes,
		MessageInfos:      file_gitpod_v1_error_proto_msgTypes,
	}.Build()
	File_gitpod_v1_error_proto = out.File
	file_gitpod_v1_error_proto_rawDesc = nil
	file_gitpod_v1_error_proto_goTypes = nil
	file_gitpod_v1_error_proto_depIdxs = nil
}
