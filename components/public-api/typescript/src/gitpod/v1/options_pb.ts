/**
 * Copyright (c) 2023 Gitpod GmbH. All rights reserved.
 * Licensed under the GNU Affero General Public License (AGPL).
 * See License.AGPL.txt in the project root for license information.
 */

// @generated by protoc-gen-es v1.3.3 with parameter "target=ts"
// @generated from file gitpod/v1/options.proto (package gitpod.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message gitpod.v1.ServiceMethodOptions
 */
export class ServiceMethodOptions extends Message<ServiceMethodOptions> {
  /**
   * whether method allows unauthenticated access
   *
   * @generated from field: bool unauthenticated = 1;
   */
  unauthenticated = false;

  /**
   * expected error codes which can be returned by this method
   *
   * @generated from field: repeated gitpod.v1.ServiceMethodOptions.ErrorCode error_codes = 2;
   */
  errorCodes: ServiceMethodOptions_ErrorCode[] = [];

  constructor(data?: PartialMessage<ServiceMethodOptions>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.ServiceMethodOptions";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "unauthenticated", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "error_codes", kind: "enum", T: proto3.getEnumType(ServiceMethodOptions_ErrorCode), repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ServiceMethodOptions {
    return new ServiceMethodOptions().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ServiceMethodOptions {
    return new ServiceMethodOptions().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ServiceMethodOptions {
    return new ServiceMethodOptions().fromJsonString(jsonString, options);
  }

  static equals(a: ServiceMethodOptions | PlainMessage<ServiceMethodOptions> | undefined, b: ServiceMethodOptions | PlainMessage<ServiceMethodOptions> | undefined): boolean {
    return proto3.util.equals(ServiceMethodOptions, a, b);
  }
}

/**
 * @generated from enum gitpod.v1.ServiceMethodOptions.ErrorCode
 */
export enum ServiceMethodOptions_ErrorCode {
  /**
   * ERROR_CODE_UNSPECIFIED is OK
   *
   * @generated from enum value: ERROR_CODE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: ERROR_CODE_CANCELLED = 1;
   */
  CANCELLED = 1,

  /**
   * @generated from enum value: ERROR_CODE_UNKNOWN = 2;
   */
  UNKNOWN = 2,

  /**
   * @generated from enum value: ERROR_CODE_INVALID_ARGUMENT = 3;
   */
  INVALID_ARGUMENT = 3,

  /**
   * @generated from enum value: ERROR_CODE_DEADLINE_EXCEEDED = 4;
   */
  DEADLINE_EXCEEDED = 4,

  /**
   * @generated from enum value: ERROR_CODE_NOT_FOUND = 5;
   */
  NOT_FOUND = 5,

  /**
   * @generated from enum value: ERROR_CODE_ALREADY_EXISTS = 6;
   */
  ALREADY_EXISTS = 6,

  /**
   * @generated from enum value: ERROR_CODE_PERMISSION_DENIED = 7;
   */
  PERMISSION_DENIED = 7,

  /**
   * @generated from enum value: ERROR_CODE_RESOURCE_EXHAUSTED = 8;
   */
  RESOURCE_EXHAUSTED = 8,

  /**
   * @generated from enum value: ERROR_CODE_FAILED_PRECONDITION = 9;
   */
  FAILED_PRECONDITION = 9,

  /**
   * @generated from enum value: ERROR_CODE_ABORTED = 10;
   */
  ABORTED = 10,

  /**
   * @generated from enum value: ERROR_CODE_OUT_OF_RANGE = 11;
   */
  OUT_OF_RANGE = 11,

  /**
   * @generated from enum value: ERROR_CODE_UNIMPLEMENTED = 12;
   */
  UNIMPLEMENTED = 12,

  /**
   * @generated from enum value: ERROR_CODE_INTERNAL = 13;
   */
  INTERNAL = 13,

  /**
   * @generated from enum value: ERROR_CODE_UNAVAILABLE = 14;
   */
  UNAVAILABLE = 14,

  /**
   * @generated from enum value: ERROR_CODE_DATA_LOSS = 15;
   */
  DATA_LOSS = 15,

  /**
   * @generated from enum value: ERROR_CODE_UNAUTHENTICATED = 16;
   */
  UNAUTHENTICATED = 16,
}
// Retrieve enum metadata with: proto3.getEnumType(ServiceMethodOptions_ErrorCode)
proto3.util.setEnumType(ServiceMethodOptions_ErrorCode, "gitpod.v1.ServiceMethodOptions.ErrorCode", [
  { no: 0, name: "ERROR_CODE_UNSPECIFIED" },
  { no: 1, name: "ERROR_CODE_CANCELLED" },
  { no: 2, name: "ERROR_CODE_UNKNOWN" },
  { no: 3, name: "ERROR_CODE_INVALID_ARGUMENT" },
  { no: 4, name: "ERROR_CODE_DEADLINE_EXCEEDED" },
  { no: 5, name: "ERROR_CODE_NOT_FOUND" },
  { no: 6, name: "ERROR_CODE_ALREADY_EXISTS" },
  { no: 7, name: "ERROR_CODE_PERMISSION_DENIED" },
  { no: 8, name: "ERROR_CODE_RESOURCE_EXHAUSTED" },
  { no: 9, name: "ERROR_CODE_FAILED_PRECONDITION" },
  { no: 10, name: "ERROR_CODE_ABORTED" },
  { no: 11, name: "ERROR_CODE_OUT_OF_RANGE" },
  { no: 12, name: "ERROR_CODE_UNIMPLEMENTED" },
  { no: 13, name: "ERROR_CODE_INTERNAL" },
  { no: 14, name: "ERROR_CODE_UNAVAILABLE" },
  { no: 15, name: "ERROR_CODE_DATA_LOSS" },
  { no: 16, name: "ERROR_CODE_UNAUTHENTICATED" },
]);
